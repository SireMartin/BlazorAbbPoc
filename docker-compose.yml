version: "2.4"
services:
  kibana:
    image: docker.elastic.co/kibana/kibana:7.16.2
    container_name: abb_kibana
    restart: always
    ports:
      - 5601:5601
    links: 
      - elasticsearch
    depends_on: 
      - elasticsearch
    networks:
      - elastic

  filebeat:
    image: abb_filebeat:1
    container_name: abb_filebeat
    restart: always
    build: 
      context: ./filebeat
    environment:
      - strict.perms=false
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
    networks:
      - elastic
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
    container_name: abb_elasticsearch
    restart: always
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - elastic
    volumes:
      - data_elastic:/usr/share/elasticsearch/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: abb_rabbitmq
    restart: always
    ports:
      - 1883:1883
      - 5672:5672
      - 15672:15672
    networks:
      - elastic
  
  webapp:
    image: abb_evci_delft:2
    container_name: abb_webapp
    restart: always
    build: 
      context: ./BlazorAbbPoc
      args:
        - TELERIK_USER
        - TELERIK_PASSWORD
    environment:
      - TZ=Europe/Brussels
    ports:
      - 8080:80
      - 443:443
    depends_on:
      - postgres
    networks:
      - elastic

  postgres:
    image: postgres:latest
    container_name: abb_postgres
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - data_postgres:/var/lib/postgresql/data
#      - ./dbscripts/seed.sql:/docker-entrypoint-initdb.d/seed.sql
    environment:
      POSTGRES_USER: "sf1"
      POSTGRES_PASSWORD: "sf123"
      POSTGRES_DB: "abb"
    networks:
      - elastic

networks:
  elastic:
    driver: bridge

volumes:
  data_elastic:
    driver: local
  data_postgres:
    driver: local
