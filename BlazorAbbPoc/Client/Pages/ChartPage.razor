@page "/chart"

@inject IHttpClientFactory ClientFactory

@if (coll is not null)
{
    <TelerikChart>
        <ChartSeriesItems>
            <ChartSeries Type="ChartSeriesType.Line" Name="L1Voltage" Data="@dataColl" Field="@nameof(MyDataModel.L1Voltage)" 
                CategoryField="@nameof(MyDataModel.TimeCategory)" Aggregate="ChartSeriesAggregate.Avg" />
            <ChartSeries Type="ChartSeriesType.Line" Name="L2Voltage" Data="@dataColl" Field="@nameof(MyDataModel.L2Voltage)" Aggregate="ChartSeriesAggregate.Avg" />
            <ChartSeries Type="ChartSeriesType.Line" Name="L1Voltage" Data="@dataColl" Field="@nameof(MyDataModel.L3Voltage)" Aggregate="ChartSeriesAggregate.Avg" />
        </ChartSeriesItems>

        <ChartValueAxes>
            <ChartValueAxis Color="red"></ChartValueAxis>
        </ChartValueAxes>

        <ChartCategoryAxes>
            <ChartCategoryAxis Type="ChartCategoryAxisType.Date" BaseUnit="ChartCategoryAxisBaseUnit.Fit"></ChartCategoryAxis>
        </ChartCategoryAxes>

        <ChartTitle Text="Voltage Over Time"></ChartTitle>

        <ChartLegend Position="Telerik.Blazor.ChartLegendPosition.Bottom">
        </ChartLegend>
    </TelerikChart>
}
else
{
    <div class="container">
        <div class="row my-4 justify-content-center">
            <div class="col-auto">
                <h4>No data yet!</h4>
            </div>
        </div>
    </div>
}

@code {
    public class MyDataModel
    {
        public DateTime TimeCategory { get; set; }
        public int L1Voltage { get; set; }
        public int L2Voltage { get; set; }
        public int L3Voltage { get; set; }
    }

    private IEnumerable<BlazorAbbPoc.Shared.ChartData>? coll = null;
    private IEnumerable<MyDataModel>? dataColl;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        HttpClient httpClient = ClientFactory.CreateClient("WebApi");
        try
        {
            coll = await httpClient.GetFromJsonAsync<IEnumerable<BlazorAbbPoc.Shared.ChartData>>("api/plcdata/chartdata");
            dataColl = coll.Select(x => new MyDataModel { TimeCategory = x.timestamp, L1Voltage = x.plcMsg.l1nV, L2Voltage = x.plcMsg.l2nV, L3Voltage = x.plcMsg.l3nV });
        }
        catch(Exception e)
        {
            string msg = e.Message;
        }
    }
}